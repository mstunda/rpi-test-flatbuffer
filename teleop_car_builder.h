#ifndef TELEOP_CAR_BUILDER_H
#define TELEOP_CAR_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef TELEOP_CAR_READER_H
#include "teleop_car_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#ifndef TELEOP_TYPES_BUILDER_H
#include "teleop_types_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef flatbuffers_union_ref_t getugo_Payload_union_ref_t;
typedef flatbuffers_union_vec_ref_t getugo_Payload_union_vec_ref_t;
static getugo_Payload_union_ref_t getugo_Payload_clone(flatbuffers_builder_t *B, getugo_Payload_union_t t);

static const flatbuffers_voffset_t __getugo_VehicleControlRequest_required[] = { 0 };
typedef flatbuffers_ref_t getugo_VehicleControlRequest_ref_t;
static getugo_VehicleControlRequest_ref_t getugo_VehicleControlRequest_clone(flatbuffers_builder_t *B, getugo_VehicleControlRequest_table_t t);
__flatbuffers_build_table(flatbuffers_, getugo_VehicleControlRequest, 3)

static const flatbuffers_voffset_t __getugo_VehicleTelemetryUpdate_required[] = { 0 };
typedef flatbuffers_ref_t getugo_VehicleTelemetryUpdate_ref_t;
static getugo_VehicleTelemetryUpdate_ref_t getugo_VehicleTelemetryUpdate_clone(flatbuffers_builder_t *B, getugo_VehicleTelemetryUpdate_table_t t);
__flatbuffers_build_table(flatbuffers_, getugo_VehicleTelemetryUpdate, 3)

static const flatbuffers_voffset_t __getugo_TeleopMsg_required[] = { 0, 0 };
typedef flatbuffers_ref_t getugo_TeleopMsg_ref_t;
static getugo_TeleopMsg_ref_t getugo_TeleopMsg_clone(flatbuffers_builder_t *B, getugo_TeleopMsg_table_t t);
__flatbuffers_build_table(flatbuffers_, getugo_TeleopMsg, 3)

#define __getugo_VehicleControlRequest_formal_args , float v0, float v1, float v2
#define __getugo_VehicleControlRequest_call_args , v0, v1, v2
static inline getugo_VehicleControlRequest_ref_t getugo_VehicleControlRequest_create(flatbuffers_builder_t *B __getugo_VehicleControlRequest_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, getugo_VehicleControlRequest, getugo_VehicleControlRequest_identifier, getugo_VehicleControlRequest_type_identifier)

#define __getugo_VehicleTelemetryUpdate_formal_args , float v0, float v1, float v2
#define __getugo_VehicleTelemetryUpdate_call_args , v0, v1, v2
static inline getugo_VehicleTelemetryUpdate_ref_t getugo_VehicleTelemetryUpdate_create(flatbuffers_builder_t *B __getugo_VehicleTelemetryUpdate_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, getugo_VehicleTelemetryUpdate, getugo_VehicleTelemetryUpdate_identifier, getugo_VehicleTelemetryUpdate_type_identifier)

#define __getugo_TeleopMsg_formal_args , getugo_Header_t *v0, getugo_Payload_union_ref_t v2
#define __getugo_TeleopMsg_call_args , v0, v2
static inline getugo_TeleopMsg_ref_t getugo_TeleopMsg_create(flatbuffers_builder_t *B __getugo_TeleopMsg_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, getugo_TeleopMsg, getugo_TeleopMsg_identifier, getugo_TeleopMsg_type_identifier)

static inline getugo_Payload_union_ref_t getugo_Payload_as_NONE()
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_NONE; uref.value = 0; return uref; }
static inline getugo_Payload_union_ref_t getugo_Payload_as_VehicleControlRequest(getugo_VehicleControlRequest_ref_t ref)
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_VehicleControlRequest; uref.value = ref; return uref; }
static inline getugo_Payload_union_ref_t getugo_Payload_as_VehicleTelemetryUpdate(getugo_VehicleTelemetryUpdate_ref_t ref)
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_VehicleTelemetryUpdate; uref.value = ref; return uref; }
static inline getugo_Payload_union_ref_t getugo_Payload_as_CameraRequest(getugo_CameraRequest_ref_t ref)
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_CameraRequest; uref.value = ref; return uref; }
static inline getugo_Payload_union_ref_t getugo_Payload_as_Ping(getugo_Ping_ref_t ref)
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_Ping; uref.value = ref; return uref; }
static inline getugo_Payload_union_ref_t getugo_Payload_as_Pong(getugo_Pong_ref_t ref)
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_Pong; uref.value = ref; return uref; }
static inline getugo_Payload_union_ref_t getugo_Payload_as_EgoPose(getugo_EgoPose_ref_t ref)
{ getugo_Payload_union_ref_t uref; uref.type = getugo_Payload_EgoPose; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, getugo_Payload)

static getugo_Payload_union_ref_t getugo_Payload_clone(flatbuffers_builder_t *B, getugo_Payload_union_t u)
{
    switch (u.type) {
    case 1: return getugo_Payload_as_VehicleControlRequest(getugo_VehicleControlRequest_clone(B, (getugo_VehicleControlRequest_table_t)u.value));
    case 2: return getugo_Payload_as_VehicleTelemetryUpdate(getugo_VehicleTelemetryUpdate_clone(B, (getugo_VehicleTelemetryUpdate_table_t)u.value));
    case 3: return getugo_Payload_as_CameraRequest(getugo_CameraRequest_clone(B, (getugo_CameraRequest_table_t)u.value));
    case 4: return getugo_Payload_as_Ping(getugo_Ping_clone(B, (getugo_Ping_table_t)u.value));
    case 5: return getugo_Payload_as_Pong(getugo_Pong_clone(B, (getugo_Pong_table_t)u.value));
    case 6: return getugo_Payload_as_EgoPose(getugo_EgoPose_clone(B, (getugo_EgoPose_table_t)u.value));
    default: return getugo_Payload_as_NONE();
    }
}

__flatbuffers_build_scalar_field(0, flatbuffers_, getugo_VehicleControlRequest_steering_angle, flatbuffers_float, float, 4, 4, 0.000000f, getugo_VehicleControlRequest)
__flatbuffers_build_scalar_field(1, flatbuffers_, getugo_VehicleControlRequest_steering_angle_rear_axle, flatbuffers_float, float, 4, 4, 0.000000f, getugo_VehicleControlRequest)
__flatbuffers_build_scalar_field(2, flatbuffers_, getugo_VehicleControlRequest_acceleration, flatbuffers_float, float, 4, 4, 0.000000f, getugo_VehicleControlRequest)

static inline getugo_VehicleControlRequest_ref_t getugo_VehicleControlRequest_create(flatbuffers_builder_t *B __getugo_VehicleControlRequest_formal_args)
{
    if (getugo_VehicleControlRequest_start(B)
        || getugo_VehicleControlRequest_steering_angle_add(B, v0)
        || getugo_VehicleControlRequest_steering_angle_rear_axle_add(B, v1)
        || getugo_VehicleControlRequest_acceleration_add(B, v2)) {
        return 0;
    }
    return getugo_VehicleControlRequest_end(B);
}

static getugo_VehicleControlRequest_ref_t getugo_VehicleControlRequest_clone(flatbuffers_builder_t *B, getugo_VehicleControlRequest_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (getugo_VehicleControlRequest_start(B)
        || getugo_VehicleControlRequest_steering_angle_pick(B, t)
        || getugo_VehicleControlRequest_steering_angle_rear_axle_pick(B, t)
        || getugo_VehicleControlRequest_acceleration_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, getugo_VehicleControlRequest_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, getugo_VehicleTelemetryUpdate_velocity, flatbuffers_float, float, 4, 4, 0.000000f, getugo_VehicleTelemetryUpdate)
__flatbuffers_build_scalar_field(1, flatbuffers_, getugo_VehicleTelemetryUpdate_actual_angle, flatbuffers_float, float, 4, 4, 0.000000f, getugo_VehicleTelemetryUpdate)
__flatbuffers_build_scalar_field(2, flatbuffers_, getugo_VehicleTelemetryUpdate_actual_angle_rear_axle, flatbuffers_float, float, 4, 4, 0.000000f, getugo_VehicleTelemetryUpdate)

static inline getugo_VehicleTelemetryUpdate_ref_t getugo_VehicleTelemetryUpdate_create(flatbuffers_builder_t *B __getugo_VehicleTelemetryUpdate_formal_args)
{
    if (getugo_VehicleTelemetryUpdate_start(B)
        || getugo_VehicleTelemetryUpdate_velocity_add(B, v0)
        || getugo_VehicleTelemetryUpdate_actual_angle_add(B, v1)
        || getugo_VehicleTelemetryUpdate_actual_angle_rear_axle_add(B, v2)) {
        return 0;
    }
    return getugo_VehicleTelemetryUpdate_end(B);
}

static getugo_VehicleTelemetryUpdate_ref_t getugo_VehicleTelemetryUpdate_clone(flatbuffers_builder_t *B, getugo_VehicleTelemetryUpdate_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (getugo_VehicleTelemetryUpdate_start(B)
        || getugo_VehicleTelemetryUpdate_velocity_pick(B, t)
        || getugo_VehicleTelemetryUpdate_actual_angle_pick(B, t)
        || getugo_VehicleTelemetryUpdate_actual_angle_rear_axle_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, getugo_VehicleTelemetryUpdate_end(B));
}

__flatbuffers_build_struct_field(0, flatbuffers_, getugo_TeleopMsg_teleop_header, getugo_Header, 8, 8, getugo_TeleopMsg)
__flatbuffers_build_union_field(2, flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, getugo_TeleopMsg)
__flatbuffers_build_union_table_value_field(flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, VehicleControlRequest, getugo_VehicleControlRequest)
__flatbuffers_build_union_table_value_field(flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, VehicleTelemetryUpdate, getugo_VehicleTelemetryUpdate)
__flatbuffers_build_union_table_value_field(flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, CameraRequest, getugo_CameraRequest)
__flatbuffers_build_union_table_value_field(flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, Ping, getugo_Ping)
__flatbuffers_build_union_table_value_field(flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, Pong, getugo_Pong)
__flatbuffers_build_union_table_value_field(flatbuffers_, getugo_TeleopMsg_payload, getugo_Payload, EgoPose, getugo_EgoPose)

static inline getugo_TeleopMsg_ref_t getugo_TeleopMsg_create(flatbuffers_builder_t *B __getugo_TeleopMsg_formal_args)
{
    if (getugo_TeleopMsg_start(B)
        || getugo_TeleopMsg_teleop_header_add(B, v0)
        || getugo_TeleopMsg_payload_add_value(B, v2)
        || getugo_TeleopMsg_payload_add_type(B, v2.type)) {
        return 0;
    }
    return getugo_TeleopMsg_end(B);
}

static getugo_TeleopMsg_ref_t getugo_TeleopMsg_clone(flatbuffers_builder_t *B, getugo_TeleopMsg_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (getugo_TeleopMsg_start(B)
        || getugo_TeleopMsg_teleop_header_pick(B, t)
        || getugo_TeleopMsg_payload_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, getugo_TeleopMsg_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* TELEOP_CAR_BUILDER_H */
